# encoding: utf-8
"""
@author:  sherlock
@contact: sherlockliao01@gmail.com
"""

from .transforms import RandomErasing
from torchvision import transforms

def get_train_transforms(cfg):
    mean = [-0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889,
            -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580,
            -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
            -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302]
    std = [0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657,
           0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228,
           1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970,
           1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398]
    train_transforms = transforms.Compose([
        RandomErasing(mean=mean),
        transforms.ToTensor(),
        transforms.Normalize(mean, std)
    ])
    return train_transforms

def get_valid_transforms(cfg):
    mean = [-0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889, -0.0889,
            -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580, -0.0580,
            -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
            -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302, -1.3302]
    std = [0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657, 0.5657,
           0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228, 0.4228,
           1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970, 1.5970,
           1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398, 1.2398]
    valid_transforms = transforms.Compose([
        transforms.ToTensor(),
        transforms.Normalize(mean, std)
    ])
    return valid_transforms

def build_transforms(cfg, is_train=True):
    if is_train:
        transform = get_train_transforms(cfg)
    else:
        transform = get_valid_transforms(cfg)

    return transform
